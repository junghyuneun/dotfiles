'use babel';

/**
 * Define overrides by the image name, not config key name. Only certain
 * properties should be overriden. They are the following:
 *
 *  - height
 *  - margin
 *  - marginBottom
 *  - marginLeft
 *  - marginRight
 *  - marginTop
 *  - width
 */

/**
 * Define overrides for Fuzzy Finder here. Activated with (Cmd + P) by default.
 */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tree = exports.tab = exports.finder = void 0;
const finder = {
  Go: {
    marginRight: 3,
    marginLeft: '3px !important'
  },
  HaskellAlt: {
    marginTop: 2
  },
  JSON: {
    marginTop: 1
  },
  LaravelAlt: {
    marginTop: 2
  },
  Less: {
    marginTop: 9
  },
  LiveScript: {
    marginTop: 1
  },
  Markdown: {
    marginTop: 5
  },
  MarkdownAlt: {
    marginTop: 5
  },
  PHP: {
    margin: '4px 3px 0 0 !important',
    width: 18
  },
  Rust: {
    height: 16,
    marginRight: 4,
    width: 16
  },
  Sass: {
    margin: '0 4px 0 0',
    width: 16
  },
  npm: {
    margin: '8px 3px 0 0 !important',
    width: 18
  },
  Handlebars: {
    marginTop: 10
  }
};

/**
 * Define overrides for the tabs when a file is open.
 */
exports.finder = finder;
const tab = {
  AVA: {
    marginRight: 4,
    width: 20
  },
  Go: {
    marginRight: 4
  },
  HaskellAlt: {
    marginTop: 2
  },
  JSON: {
    marginTop: 1
  },
  LaravelAlt: {
    marginTop: 2
  },
  Less: {
    marginRight: 4,
    marginTop: 6,
    width: 22
  },
  LiveScript: {
    marginTop: 0
  },
  Markdown: {
    marginTop: 4
  },
  MarkdownAlt: {
    marginTop: 4
  },
  PHP: {
    marginTop: 2,
    width: 18
  },
  Rust: {
    height: 16,
    width: 16
  },
  Sass: {
    marginTop: 0,
    width: 16
  },
  npm: {
    marginTop: 8,
    width: 18
  },
  Handlebars: {
    marginTop: 5
  }
};

/**
 * Define overrides for the tree-view module.
 */
exports.tab = tab;
const tree = {
  AVA: {
    margin: '5px 0 0 0',
    width: 20
  },
  Go: {
    margin: '4px 6px 0 2px'
  },
  HaskellAlt: {
    marginTop: 7
  },
  JSON: {
    marginTop: 5
  },
  LaravelAlt: {
    marginTop: 6
  },
  Less: {
    margin: '8px 5px 0 -5px',
    width: 22
  },
  LiveScript: {
    marginTop: 6
  },
  Markdown: {
    marginTop: 7
  },
  MarkdownAlt: {
    marginTop: 7
  },
  PHP: {
    margin: '7px 7px 0 -3px',
    width: 18
  },
  Rust: {
    height: 16,
    margin: '3px 7px 0 0',
    width: 16
  },
  Sass: {
    margin: '5px 6px 0 0',
    width: 16
  },
  npm: {
    margin: '9px 7px 0 -3px',
    width: 18
  },
  Handlebars: {
    marginTop: 10
  }
};
exports.tree = tree;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmaW5kZXIiLCJHbyIsIm1hcmdpblJpZ2h0IiwibWFyZ2luTGVmdCIsIkhhc2tlbGxBbHQiLCJtYXJnaW5Ub3AiLCJKU09OIiwiTGFyYXZlbEFsdCIsIkxlc3MiLCJMaXZlU2NyaXB0IiwiTWFya2Rvd24iLCJNYXJrZG93bkFsdCIsIlBIUCIsIm1hcmdpbiIsIndpZHRoIiwiUnVzdCIsImhlaWdodCIsIlNhc3MiLCJucG0iLCJIYW5kbGViYXJzIiwidGFiIiwiQVZBIiwidHJlZSJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgYmFiZWwnXG5cbi8qKlxuICogRGVmaW5lIG92ZXJyaWRlcyBieSB0aGUgaW1hZ2UgbmFtZSwgbm90IGNvbmZpZyBrZXkgbmFtZS4gT25seSBjZXJ0YWluXG4gKiBwcm9wZXJ0aWVzIHNob3VsZCBiZSBvdmVycmlkZW4uIFRoZXkgYXJlIHRoZSBmb2xsb3dpbmc6XG4gKlxuICogIC0gaGVpZ2h0XG4gKiAgLSBtYXJnaW5cbiAqICAtIG1hcmdpbkJvdHRvbVxuICogIC0gbWFyZ2luTGVmdFxuICogIC0gbWFyZ2luUmlnaHRcbiAqICAtIG1hcmdpblRvcFxuICogIC0gd2lkdGhcbiAqL1xuXG4vKipcbiAqIERlZmluZSBvdmVycmlkZXMgZm9yIEZ1enp5IEZpbmRlciBoZXJlLiBBY3RpdmF0ZWQgd2l0aCAoQ21kICsgUCkgYnkgZGVmYXVsdC5cbiAqL1xuZXhwb3J0IGNvbnN0IGZpbmRlciA9IHtcbiAgR286IHtcbiAgICBtYXJnaW5SaWdodDogMyxcbiAgICBtYXJnaW5MZWZ0OiAnM3B4ICFpbXBvcnRhbnQnLFxuICB9LFxuICBIYXNrZWxsQWx0OiB7XG4gICAgbWFyZ2luVG9wOiAyLFxuICB9LFxuICBKU09OOiB7XG4gICAgbWFyZ2luVG9wOiAxLFxuICB9LFxuICBMYXJhdmVsQWx0OiB7XG4gICAgbWFyZ2luVG9wOiAyLFxuICB9LFxuICBMZXNzOiB7XG4gICAgbWFyZ2luVG9wOiA5LFxuICB9LFxuICBMaXZlU2NyaXB0OiB7XG4gICAgbWFyZ2luVG9wOiAxLFxuICB9LFxuICBNYXJrZG93bjoge1xuICAgIG1hcmdpblRvcDogNSxcbiAgfSxcbiAgTWFya2Rvd25BbHQ6IHtcbiAgICBtYXJnaW5Ub3A6IDUsXG4gIH0sXG4gIFBIUDoge1xuICAgIG1hcmdpbjogJzRweCAzcHggMCAwICFpbXBvcnRhbnQnLFxuICAgIHdpZHRoOiAxOCxcbiAgfSxcbiAgUnVzdDoge1xuICAgIGhlaWdodDogMTYsXG4gICAgbWFyZ2luUmlnaHQ6IDQsXG4gICAgd2lkdGg6IDE2LFxuICB9LFxuICBTYXNzOiB7XG4gICAgbWFyZ2luOiAnMCA0cHggMCAwJyxcbiAgICB3aWR0aDogMTYsXG4gIH0sXG4gIG5wbToge1xuICAgIG1hcmdpbjogJzhweCAzcHggMCAwICFpbXBvcnRhbnQnLFxuICAgIHdpZHRoOiAxOCxcbiAgfSxcbiAgSGFuZGxlYmFyczoge1xuICAgIG1hcmdpblRvcDogMTAsXG4gIH0sXG59XG5cbi8qKlxuICogRGVmaW5lIG92ZXJyaWRlcyBmb3IgdGhlIHRhYnMgd2hlbiBhIGZpbGUgaXMgb3Blbi5cbiAqL1xuZXhwb3J0IGNvbnN0IHRhYiA9IHtcbiAgQVZBOiB7XG4gICAgbWFyZ2luUmlnaHQ6IDQsXG4gICAgd2lkdGg6IDIwLFxuICB9LFxuICBHbzoge1xuICAgIG1hcmdpblJpZ2h0OiA0LFxuICB9LFxuICBIYXNrZWxsQWx0OiB7XG4gICAgbWFyZ2luVG9wOiAyLFxuICB9LFxuICBKU09OOiB7XG4gICAgbWFyZ2luVG9wOiAxLFxuICB9LFxuICBMYXJhdmVsQWx0OiB7XG4gICAgbWFyZ2luVG9wOiAyLFxuICB9LFxuICBMZXNzOiB7XG4gICAgbWFyZ2luUmlnaHQ6IDQsXG4gICAgbWFyZ2luVG9wOiA2LFxuICAgIHdpZHRoOiAyMixcbiAgfSxcbiAgTGl2ZVNjcmlwdDoge1xuICAgIG1hcmdpblRvcDogMCxcbiAgfSxcbiAgTWFya2Rvd246IHtcbiAgICBtYXJnaW5Ub3A6IDQsXG4gIH0sXG4gIE1hcmtkb3duQWx0OiB7XG4gICAgbWFyZ2luVG9wOiA0LFxuICB9LFxuICBQSFA6IHtcbiAgICBtYXJnaW5Ub3A6IDIsXG4gICAgd2lkdGg6IDE4LFxuICB9LFxuICBSdXN0OiB7XG4gICAgaGVpZ2h0OiAxNixcbiAgICB3aWR0aDogMTYsXG4gIH0sXG4gIFNhc3M6IHtcbiAgICBtYXJnaW5Ub3A6IDAsXG4gICAgd2lkdGg6IDE2LFxuICB9LFxuICBucG06IHtcbiAgICBtYXJnaW5Ub3A6IDgsXG4gICAgd2lkdGg6IDE4LFxuICB9LFxuICBIYW5kbGViYXJzOiB7XG4gICAgbWFyZ2luVG9wOiA1LFxuICB9LFxufVxuXG4vKipcbiAqIERlZmluZSBvdmVycmlkZXMgZm9yIHRoZSB0cmVlLXZpZXcgbW9kdWxlLlxuICovXG5leHBvcnQgY29uc3QgdHJlZSA9IHtcbiAgQVZBOiB7XG4gICAgbWFyZ2luOiAnNXB4IDAgMCAwJyxcbiAgICB3aWR0aDogMjAsXG4gIH0sXG4gIEdvOiB7XG4gICAgbWFyZ2luOiAnNHB4IDZweCAwIDJweCcsXG4gIH0sXG4gIEhhc2tlbGxBbHQ6IHtcbiAgICBtYXJnaW5Ub3A6IDcsXG4gIH0sXG4gIEpTT046IHtcbiAgICBtYXJnaW5Ub3A6IDUsXG4gIH0sXG4gIExhcmF2ZWxBbHQ6IHtcbiAgICBtYXJnaW5Ub3A6IDYsXG4gIH0sXG4gIExlc3M6IHtcbiAgICBtYXJnaW46ICc4cHggNXB4IDAgLTVweCcsXG4gICAgd2lkdGg6IDIyLFxuICB9LFxuICBMaXZlU2NyaXB0OiB7XG4gICAgbWFyZ2luVG9wOiA2LFxuICB9LFxuICBNYXJrZG93bjoge1xuICAgIG1hcmdpblRvcDogNyxcbiAgfSxcbiAgTWFya2Rvd25BbHQ6IHtcbiAgICBtYXJnaW5Ub3A6IDcsXG4gIH0sXG4gIFBIUDoge1xuICAgIG1hcmdpbjogJzdweCA3cHggMCAtM3B4JyxcbiAgICB3aWR0aDogMTgsXG4gIH0sXG4gIFJ1c3Q6IHtcbiAgICBoZWlnaHQ6IDE2LFxuICAgIG1hcmdpbjogJzNweCA3cHggMCAwJyxcbiAgICB3aWR0aDogMTYsXG4gIH0sXG4gIFNhc3M6IHtcbiAgICBtYXJnaW46ICc1cHggNnB4IDAgMCcsXG4gICAgd2lkdGg6IDE2LFxuICB9LFxuICBucG06IHtcbiAgICBtYXJnaW46ICc5cHggN3B4IDAgLTNweCcsXG4gICAgd2lkdGg6IDE4LFxuICB9LFxuICBIYW5kbGViYXJzOiB7XG4gICAgbWFyZ2luVG9wOiAxMCxcbiAgfSxcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVzs7QUFFWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRkE7RUFBQTtBQUFBO0FBQUE7QUFHTyxNQUFNQSxNQUFNLEdBQUc7RUFDcEJDLEVBQUUsRUFBRTtJQUNGQyxXQUFXLEVBQUUsQ0FBQztJQUNkQyxVQUFVLEVBQUU7RUFDZCxDQUFDO0VBQ0RDLFVBQVUsRUFBRTtJQUNWQyxTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKRCxTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RFLFVBQVUsRUFBRTtJQUNWRixTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RHLElBQUksRUFBRTtJQUNKSCxTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RJLFVBQVUsRUFBRTtJQUNWSixTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RLLFFBQVEsRUFBRTtJQUNSTCxTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RNLFdBQVcsRUFBRTtJQUNYTixTQUFTLEVBQUU7RUFDYixDQUFDO0VBQ0RPLEdBQUcsRUFBRTtJQUNIQyxNQUFNLEVBQUUsd0JBQXdCO0lBQ2hDQyxLQUFLLEVBQUU7RUFDVCxDQUFDO0VBQ0RDLElBQUksRUFBRTtJQUNKQyxNQUFNLEVBQUUsRUFBRTtJQUNWZCxXQUFXLEVBQUUsQ0FBQztJQUNkWSxLQUFLLEVBQUU7RUFDVCxDQUFDO0VBQ0RHLElBQUksRUFBRTtJQUNKSixNQUFNLEVBQUUsV0FBVztJQUNuQkMsS0FBSyxFQUFF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